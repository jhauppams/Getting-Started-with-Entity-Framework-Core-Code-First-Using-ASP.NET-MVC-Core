@model ContosoUniversity.Models.Department

@{
    ViewData["Title"] = "Edit";
}

<h2>Edit</h2>

<form asp-action="Edit">
    <div class="form-horizontal">
        <h4>Department</h4>
        <hr />
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <input type="hidden" asp-for="DepartmentID" />
        <input type="hidden" asp-for="RowVersion" />
        <div class="form-group">
            <label asp-for="Name" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger" />
                @*###############NEEDS TO BE FURTHER INVESTIGATED###########################*@
                @*asp-validation-for tag helper only refresh if model is value is empty*@
                @*see:  https://weblog.west-wind.com/posts/2012/Apr/20/ASPNET-MVC-Postbacks-and-HtmlHelper-Controls-ignoring-Model-Changes*@
                @if (!ViewData.ModelState.IsValid && ViewData.ModelState["Name"].Errors.Count > 0)
                {
                    <span class="field-validation-error">@ViewData.ModelState["Name"].Errors[0].ErrorMessage</span>
                }     
            </div>
        </div>
        <div class="form-group">
            <label asp-for="Budget" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                <input asp-for="Budget" class="form-control" />
                <span asp-validation-for="Budget" class="text-danger" />
                @if (!ViewData.ModelState.IsValid && ViewData.ModelState["Budget"].Errors.Count >0)
                {
                    <span class="field-validation-error">@ViewData.ModelState["Budget"].Errors[0].ErrorMessage</span>
                }  
            </div>
        </div>
        <div class="form-group">
            <label asp-for="StartDate" class="col-md-2 control-label"></label>
            <div class="col-md-10">
                <input asp-for="StartDate" class="form-control" />
                <span asp-validation-for="StartDate" class="text-danger" />
                @if (!ViewData.ModelState.IsValid && ViewData.ModelState["StartDate"].Errors.Count > 0)
                {
                    <span class="field-validation-error">@ViewData.ModelState["StartDate"].Errors[0].ErrorMessage</span>
                }  
            </div>
        </div>
        <div class="form-group">
            <label asp-for="InstructorID" class="control-label col-md-2"></label>
            <div class="col-md-10">
                <select asp-for="InstructorID" class="form-control" asp-items="ViewBag.InstructorID"></select>
                <span asp-validation-for="InstructorID" class="text-danger" />
                @if (!ViewData.ModelState.IsValid && ViewData.ModelState["InstructorID"].Errors.Count > 0)
                {
                    <span class="field-validation-error">@ViewData.ModelState["InstructorID"].Errors[0].ErrorMessage</span>
                } 
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
</form>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
